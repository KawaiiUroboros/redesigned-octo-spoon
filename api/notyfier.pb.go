// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.4
// source: notyfier.proto

package api_pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Notyfier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotyfierId string `protobuf:"bytes,1,opt,name=notyfier_id,json=notyfierId,proto3" json:"notyfier_id,omitempty"`
}

func (x *Notyfier) Reset() {
	*x = Notyfier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notyfier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notyfier) ProtoMessage() {}

func (x *Notyfier) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notyfier.ProtoReflect.Descriptor instead.
func (*Notyfier) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{0}
}

func (x *Notyfier) GetNotyfierId() string {
	if x != nil {
		return x.NotyfierId
	}
	return ""
}

type ListNotyfiersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNotyfiersRequest) Reset() {
	*x = ListNotyfiersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotyfiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotyfiersRequest) ProtoMessage() {}

func (x *ListNotyfiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotyfiersRequest.ProtoReflect.Descriptor instead.
func (*ListNotyfiersRequest) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{1}
}

type ListNotyfiersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notyfiers []*Notyfier `protobuf:"bytes,1,rep,name=notyfiers,proto3" json:"notyfiers,omitempty"`
}

func (x *ListNotyfiersResponse) Reset() {
	*x = ListNotyfiersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotyfiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotyfiersResponse) ProtoMessage() {}

func (x *ListNotyfiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotyfiersResponse.ProtoReflect.Descriptor instead.
func (*ListNotyfiersResponse) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{2}
}

func (x *ListNotyfiersResponse) GetNotyfiers() []*Notyfier {
	if x != nil {
		return x.Notyfiers
	}
	return nil
}

type GetNotyfierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotyfierId string `protobuf:"bytes,1,opt,name=notyfier_id,json=notyfierId,proto3" json:"notyfier_id,omitempty"`
}

func (x *GetNotyfierRequest) Reset() {
	*x = GetNotyfierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotyfierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotyfierRequest) ProtoMessage() {}

func (x *GetNotyfierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotyfierRequest.ProtoReflect.Descriptor instead.
func (*GetNotyfierRequest) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotyfierRequest) GetNotyfierId() string {
	if x != nil {
		return x.NotyfierId
	}
	return ""
}

type CreateNotyfierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notyfier *Notyfier `protobuf:"bytes,1,opt,name=notyfier,proto3" json:"notyfier,omitempty"`
}

func (x *CreateNotyfierRequest) Reset() {
	*x = CreateNotyfierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotyfierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotyfierRequest) ProtoMessage() {}

func (x *CreateNotyfierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotyfierRequest.ProtoReflect.Descriptor instead.
func (*CreateNotyfierRequest) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNotyfierRequest) GetNotyfier() *Notyfier {
	if x != nil {
		return x.Notyfier
	}
	return nil
}

type UpdateNotyfierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notyfier *Notyfier `protobuf:"bytes,1,opt,name=notyfier,proto3" json:"notyfier,omitempty"`
}

func (x *UpdateNotyfierRequest) Reset() {
	*x = UpdateNotyfierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotyfierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotyfierRequest) ProtoMessage() {}

func (x *UpdateNotyfierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotyfierRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotyfierRequest) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNotyfierRequest) GetNotyfier() *Notyfier {
	if x != nil {
		return x.Notyfier
	}
	return nil
}

type DeleteNotyfierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotyfierId string `protobuf:"bytes,1,opt,name=notyfier_id,json=notyfierId,proto3" json:"notyfier_id,omitempty"`
}

func (x *DeleteNotyfierRequest) Reset() {
	*x = DeleteNotyfierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notyfier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotyfierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotyfierRequest) ProtoMessage() {}

func (x *DeleteNotyfierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notyfier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotyfierRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotyfierRequest) Descriptor() ([]byte, []int) {
	return file_notyfier_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNotyfierRequest) GetNotyfierId() string {
	if x != nil {
		return x.NotyfierId
	}
	return ""
}

var File_notyfier_proto protoreflect.FileDescriptor

var file_notyfier_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2b, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e,
	0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x08, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76,
	0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x22, 0x38,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x79, 0x66,
	0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f,
	0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x32, 0x95, 0x05, 0x0a, 0x0f, 0x4e, 0x6f, 0x74,
	0x79, 0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e,
	0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x63, 0x68, 0x69,
	0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a,
	0x2f, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x79, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x68, 0x69,
	0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61,
	0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79, 0x66,
	0x69, 0x65, 0x72, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x6e, 0x6f,
	0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69,
	0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76,
	0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x0a, 0x2f, 0x6e,
	0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x3a, 0x08, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f,
	0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e,
	0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x32, 0x21, 0x2f, 0x6e, 0x6f, 0x74,
	0x79, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x08, 0x6e,
	0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x68, 0x69,
	0x72, 0x69, 0x6b, 0x6f, 0x76, 0x61, 0x2e, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x79, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x42, 0x16, 0x5a, 0x14, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x3b, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notyfier_proto_rawDescOnce sync.Once
	file_notyfier_proto_rawDescData = file_notyfier_proto_rawDesc
)

func file_notyfier_proto_rawDescGZIP() []byte {
	file_notyfier_proto_rawDescOnce.Do(func() {
		file_notyfier_proto_rawDescData = protoimpl.X.CompressGZIP(file_notyfier_proto_rawDescData)
	})
	return file_notyfier_proto_rawDescData
}

var file_notyfier_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_notyfier_proto_goTypes = []interface{}{
	(*Notyfier)(nil),              // 0: achirikova.emergence.Notyfier
	(*ListNotyfiersRequest)(nil),  // 1: achirikova.emergence.ListNotyfiersRequest
	(*ListNotyfiersResponse)(nil), // 2: achirikova.emergence.ListNotyfiersResponse
	(*GetNotyfierRequest)(nil),    // 3: achirikova.emergence.GetNotyfierRequest
	(*CreateNotyfierRequest)(nil), // 4: achirikova.emergence.CreateNotyfierRequest
	(*UpdateNotyfierRequest)(nil), // 5: achirikova.emergence.UpdateNotyfierRequest
	(*DeleteNotyfierRequest)(nil), // 6: achirikova.emergence.DeleteNotyfierRequest
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_notyfier_proto_depIdxs = []int32{
	0, // 0: achirikova.emergence.ListNotyfiersResponse.notyfiers:type_name -> achirikova.emergence.Notyfier
	0, // 1: achirikova.emergence.CreateNotyfierRequest.notyfier:type_name -> achirikova.emergence.Notyfier
	0, // 2: achirikova.emergence.UpdateNotyfierRequest.notyfier:type_name -> achirikova.emergence.Notyfier
	1, // 3: achirikova.emergence.NotyfierService.ListNotyfiers:input_type -> achirikova.emergence.ListNotyfiersRequest
	3, // 4: achirikova.emergence.NotyfierService.GetNotyfier:input_type -> achirikova.emergence.GetNotyfierRequest
	4, // 5: achirikova.emergence.NotyfierService.CreateNotyfier:input_type -> achirikova.emergence.CreateNotyfierRequest
	5, // 6: achirikova.emergence.NotyfierService.UpdateNotyfier:input_type -> achirikova.emergence.UpdateNotyfierRequest
	6, // 7: achirikova.emergence.NotyfierService.DeleteNotyfier:input_type -> achirikova.emergence.DeleteNotyfierRequest
	2, // 8: achirikova.emergence.NotyfierService.ListNotyfiers:output_type -> achirikova.emergence.ListNotyfiersResponse
	0, // 9: achirikova.emergence.NotyfierService.GetNotyfier:output_type -> achirikova.emergence.Notyfier
	0, // 10: achirikova.emergence.NotyfierService.CreateNotyfier:output_type -> achirikova.emergence.Notyfier
	0, // 11: achirikova.emergence.NotyfierService.UpdateNotyfier:output_type -> achirikova.emergence.Notyfier
	7, // 12: achirikova.emergence.NotyfierService.DeleteNotyfier:output_type -> google.protobuf.Empty
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_notyfier_proto_init() }
func file_notyfier_proto_init() {
	if File_notyfier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notyfier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notyfier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotyfiersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotyfiersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotyfierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotyfierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotyfierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notyfier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotyfierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notyfier_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notyfier_proto_goTypes,
		DependencyIndexes: file_notyfier_proto_depIdxs,
		MessageInfos:      file_notyfier_proto_msgTypes,
	}.Build()
	File_notyfier_proto = out.File
	file_notyfier_proto_rawDesc = nil
	file_notyfier_proto_goTypes = nil
	file_notyfier_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NotyfierServiceClient is the client API for NotyfierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotyfierServiceClient interface {
	ListNotyfiers(ctx context.Context, in *ListNotyfiersRequest, opts ...grpc.CallOption) (*ListNotyfiersResponse, error)
	GetNotyfier(ctx context.Context, in *GetNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error)
	CreateNotyfier(ctx context.Context, in *CreateNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error)
	UpdateNotyfier(ctx context.Context, in *UpdateNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error)
	DeleteNotyfier(ctx context.Context, in *DeleteNotyfierRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type notyfierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNotyfierServiceClient(cc grpc.ClientConnInterface) NotyfierServiceClient {
	return &notyfierServiceClient{cc}
}

func (c *notyfierServiceClient) ListNotyfiers(ctx context.Context, in *ListNotyfiersRequest, opts ...grpc.CallOption) (*ListNotyfiersResponse, error) {
	out := new(ListNotyfiersResponse)
	err := c.cc.Invoke(ctx, "/achirikova.emergence.NotyfierService/ListNotyfiers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notyfierServiceClient) GetNotyfier(ctx context.Context, in *GetNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error) {
	out := new(Notyfier)
	err := c.cc.Invoke(ctx, "/achirikova.emergence.NotyfierService/GetNotyfier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notyfierServiceClient) CreateNotyfier(ctx context.Context, in *CreateNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error) {
	out := new(Notyfier)
	err := c.cc.Invoke(ctx, "/achirikova.emergence.NotyfierService/CreateNotyfier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notyfierServiceClient) UpdateNotyfier(ctx context.Context, in *UpdateNotyfierRequest, opts ...grpc.CallOption) (*Notyfier, error) {
	out := new(Notyfier)
	err := c.cc.Invoke(ctx, "/achirikova.emergence.NotyfierService/UpdateNotyfier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notyfierServiceClient) DeleteNotyfier(ctx context.Context, in *DeleteNotyfierRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/achirikova.emergence.NotyfierService/DeleteNotyfier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotyfierServiceServer is the server API for NotyfierService service.
type NotyfierServiceServer interface {
	ListNotyfiers(context.Context, *ListNotyfiersRequest) (*ListNotyfiersResponse, error)
	GetNotyfier(context.Context, *GetNotyfierRequest) (*Notyfier, error)
	CreateNotyfier(context.Context, *CreateNotyfierRequest) (*Notyfier, error)
	UpdateNotyfier(context.Context, *UpdateNotyfierRequest) (*Notyfier, error)
	DeleteNotyfier(context.Context, *DeleteNotyfierRequest) (*emptypb.Empty, error)
}

// UnimplementedNotyfierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotyfierServiceServer struct {
}

func (*UnimplementedNotyfierServiceServer) ListNotyfiers(context.Context, *ListNotyfiersRequest) (*ListNotyfiersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotyfiers not implemented")
}
func (*UnimplementedNotyfierServiceServer) GetNotyfier(context.Context, *GetNotyfierRequest) (*Notyfier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotyfier not implemented")
}
func (*UnimplementedNotyfierServiceServer) CreateNotyfier(context.Context, *CreateNotyfierRequest) (*Notyfier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNotyfier not implemented")
}
func (*UnimplementedNotyfierServiceServer) UpdateNotyfier(context.Context, *UpdateNotyfierRequest) (*Notyfier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNotyfier not implemented")
}
func (*UnimplementedNotyfierServiceServer) DeleteNotyfier(context.Context, *DeleteNotyfierRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNotyfier not implemented")
}

func RegisterNotyfierServiceServer(s *grpc.Server, srv NotyfierServiceServer) {
	s.RegisterService(&_NotyfierService_serviceDesc, srv)
}

func _NotyfierService_ListNotyfiers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotyfiersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotyfierServiceServer).ListNotyfiers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/achirikova.emergence.NotyfierService/ListNotyfiers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotyfierServiceServer).ListNotyfiers(ctx, req.(*ListNotyfiersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotyfierService_GetNotyfier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotyfierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotyfierServiceServer).GetNotyfier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/achirikova.emergence.NotyfierService/GetNotyfier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotyfierServiceServer).GetNotyfier(ctx, req.(*GetNotyfierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotyfierService_CreateNotyfier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNotyfierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotyfierServiceServer).CreateNotyfier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/achirikova.emergence.NotyfierService/CreateNotyfier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotyfierServiceServer).CreateNotyfier(ctx, req.(*CreateNotyfierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotyfierService_UpdateNotyfier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNotyfierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotyfierServiceServer).UpdateNotyfier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/achirikova.emergence.NotyfierService/UpdateNotyfier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotyfierServiceServer).UpdateNotyfier(ctx, req.(*UpdateNotyfierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotyfierService_DeleteNotyfier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNotyfierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotyfierServiceServer).DeleteNotyfier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/achirikova.emergence.NotyfierService/DeleteNotyfier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotyfierServiceServer).DeleteNotyfier(ctx, req.(*DeleteNotyfierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotyfierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "achirikova.emergence.NotyfierService",
	HandlerType: (*NotyfierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNotyfiers",
			Handler:    _NotyfierService_ListNotyfiers_Handler,
		},
		{
			MethodName: "GetNotyfier",
			Handler:    _NotyfierService_GetNotyfier_Handler,
		},
		{
			MethodName: "CreateNotyfier",
			Handler:    _NotyfierService_CreateNotyfier_Handler,
		},
		{
			MethodName: "UpdateNotyfier",
			Handler:    _NotyfierService_UpdateNotyfier_Handler,
		},
		{
			MethodName: "DeleteNotyfier",
			Handler:    _NotyfierService_DeleteNotyfier_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notyfier.proto",
}
